---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsUser: 999
        fsGroup: 999
      initContainers:
        - name: mongo-init-cleanup
          image: mongo:8.0
          command: ["sh", "-c", "rm -f /data/db/mongod.lock || true"]
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
              subPath: db
      containers:
        - name: mongo
          image: mongo:8.0
          args: ["--bind_ip_all", "--auth"]
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: creditas
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: creditas
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
              subPath: db
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: NodePort
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
      nodePort: 32017
